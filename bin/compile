#!/usr/bin/env bash
# bin/compile BUILD_DIR CACHE_DIR ENV_DIR

# fail fast
set -e

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
BUILDPACK_DIR=$(cd "$(dirname "$0")"; cd ..; pwd)

# util
source "$BUILDPACK_DIR/bin/util.sh"

# export env variables
export_env_dir $ENV_DIR

# download link
DEFAULT_STACKIFY_DOWNLOAD_URL="https://download.stackify.com/deb/pool/s/st/stackify-agent_latest_amd64.deb"
if [ -z "$STACKIFY_DOWNLOAD_URL" ]; then
    STACKIFY_DOWNLOAD_URL=$DEFAULT_STACKIFY_DOWNLOAD_URL
fi

# install dpkg
DPKG_CACHE_DIR="$CACHE_DIR/dpkg/cache"
mkdir -p $DPKG_CACHE_DIR
curl -L -o $DPKG_CACHE_DIR/`basename $STACKIFY_DOWNLOAD_URL` $STACKIFY_DOWNLOAD_URL
DPKG=.dpkg
mkdir -p $BUILD_DIR/$DPKG
for DEB in $(ls -1 $DPKG_CACHE_DIR/*.deb); do
  topic "Installing $(basename $DEB)"
  dpkg -x $DEB $BUILD_DIR/$DPKG/
  rm -rf $DEB
done

# install php

if hash php 2>/dev/null; then

    PHP_APM_DIR=$BUILD_DIR/$DPKG/usr/local/stackify/stackify-php-apm
    EXTENSION_DIR=`php -r 'echo ini_get("extension_dir");'`
    PHP_MAJOR_VERSION=`php -r 'echo PHP_MAJOR_VERSION;'`
    PHP_MINOR_VERSION=`php -r 'echo PHP_MINOR_VERSION;'`
    PHP_ZTS_ENABLED=`php -r 'echo PHP_ZTS;'`
    PHP_DEBUG_ENABLED=`php -r 'echo PHP_DEBUG;'`

    PHP_VERSION="${PHP_MAJOR_VERSION}.${PHP_MINOR_VERSION}";
    if [[ "$PHP_ZTS_ENABLED" == "1" ]]; then
        PHP_VERSION="${PHP_VERSION}.zts";
    fi

    echo "Detected PHP ${PHP_VERSION} and extension directory: ${EXTENSION_DIR}"

    EXTENSION_FILE="${PHP_APM_DIR}/linux_32/stackify-${PHP_VERSION}.so"
    if (is_64bit); then
        EXTENSION_FILE="${PHP_APM_DIR}/linux_64/stackify-${PHP_VERSION}.so"
    fi

    if [[ -f "$EXTENSION_FILE" ]]; then
        echo "Installing into $EXTENSION_DIR"
        cp $PHP_APM_DIR/Stackify.php ${EXTENSION_DIR}/Stackify.php
        cp $EXTENSION_FILE $EXTENSION_DIR/stackify.so
    fi

    # update permissions
    chmod 664 ./*.so > /dev/null 2>&1
    chmod 664 ./*.php > /dev/null 2>&1
    chmod 775 ./linux_* > /dev/null 2>&1
    chmod 775 ./linux_*/*.so > /dev/null 2>&1

    PHP_INI="/app/.heroku/php/etc/php/php.ini"
    if [[ -f "$PHP_INI" ]]; then
        echo "[stackify]" >> $PHP_INI
        echo "extension=stackify.so" >> $PHP_INI
    fi

else
    echo "Unable to find PHP installation"
fi

# clean up
rm -rf $BUILD_DIR/$DPKG/usr/local/stackify/install
rm -rf $BUILD_DIR/$DPKG/usr/local/stackify/.java/aarch64
rm -rf $BUILD_DIR/$DPKG/usr/local/stackify/.java/i586
rm -rf $BUILD_DIR/$DPKG/etc/init.d/stackify-agent
rm -rf $BUILD_DIR/$DPKG/usr/local/stackify/stackify-php-apm/Stackify.php
rm -rf $BUILD_DIR/$DPKG/usr/local/stackify/stackify-php-apm/linux_*
rm -rf $BUILD_DIR/$DPKG/usr/local/stackify/stackify-dotnet-apm/*.dll
rm -rf $BUILD_DIR/$DPKG/usr/local/stackify/stackify-dotnet-apm/*.so
rm -rf $BUILD_DIR/$DPKG/usr/local/stackify/stackify-java-apm/*.jar

# move startup script
mkdir -p "$BUILD_DIR/.profile.d"
cp "$BUILDPACK_DIR/startup/stackify.sh" "$BUILD_DIR/.profile.d/"
chmod +x "$BUILD_DIR/.profile.d/stackify.sh"
